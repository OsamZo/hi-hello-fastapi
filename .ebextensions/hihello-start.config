files:
  "/sbin/appstart":
    mode: "000755"
    owner: webapp
    group: webapp
    content: |
      #!/usr/bin/env bash

      # Python 가상 환경 활성화
      export VIRTUAL_ENV=/var/app/venv
      export PATH="$VIRTUAL_ENV/bin:$PATH"

      # 환경 변수 설정
      export DATABASE_URL="${DATABASE_URL}"
      export PINECONE_API_KEY="${PINECONE_API_KEY}"
      export PINECONE_ENV="${PINECONE_ENV}"
      export PINECONE_HOST="${PINECONE_HOST}"
      export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
      export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
      export UPSTAGE_API_KEY="${UPSTAGE_API_KEY}"

      # 이전 FastAPI 프로세스 종료
      pkill -f "uvicorn" || true

      # Poetry 및 패키지 설치 확인
      if ! command -v poetry &> /dev/null; then
          echo "Poetry가 설치되지 않았습니다. 설치를 시도합니다."
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
      fi

      if ! command -v uvicorn &> /dev/null; then
          echo "uvicorn이 설치되지 않았습니다. 가상 환경에서 설치를 확인합니다."
          poetry install --no-root
      fi

      # FastAPI 애플리케이션 실행
      source $VIRTUAL_ENV/bin/activate
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

container_commands:
  01_create_virtual_env:
    command: |
      python3 -m venv /var/app/venv
  02_upgrade_pip_and_install_poetry:
    command: |
      source /var/app/venv/bin/activate
      curl -sSL https://install.python-poetry.org | python3 -
      export PATH="$HOME/.local/bin:$PATH"
      poetry --version
  03_install_dependencies:
    command: |
      source /var/app/venv/bin/activate
      poetry install --no-root

option_settings:
  aws:elasticbeanstalk:application:environment:
    DATABASE_URL: "${DATABASE_URL}"
    PINECONE_API_KEY: "${PINECONE_API_KEY}"
    PINECONE_ENV: "${PINECONE_ENV}"
    PINECONE_HOST: "${PINECONE_HOST}"
    AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
    AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
    UPSTAGE_API_KEY: "${UPSTAGE_API_KEY}"